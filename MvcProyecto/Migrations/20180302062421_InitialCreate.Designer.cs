// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MvcProyecto.Models;
using System;

namespace MvcProyecto.Migrations
{
    [DbContext(typeof(MvcProyectoContext))]
    [Migration("20180302062421_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("MvcProyecto.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CedulaJuridica");

                    b.Property<string>("DireccionFisica");

                    b.Property<string>("Nombre");

                    b.Property<int>("NumeroTelefono");

                    b.Property<string>("PaginaWeb");

                    b.Property<string>("Sector");

                    b.HasKey("ID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MvcProyecto.Models.Contacto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.Property<int>("NumeroTelefono");

                    b.Property<string>("Puesto");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("MvcProyecto.Models.ReporteProblema", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<string>("DetalleProblema");

                    b.Property<string>("Estado");

                    b.Property<string>("QuienReporto");

                    b.Property<string>("TituloProblema");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.ToTable("ReporteProblema");
                });

            modelBuilder.Entity("MvcProyecto.Models.Reunion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EsVirtual");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("TituloReunion");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reunion");
                });

            modelBuilder.Entity("MvcProyecto.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.Property<string>("Password");

                    b.Property<string>("TipoUsuario");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MvcProyecto.Models.Contacto", b =>
                {
                    b.HasOne("MvcProyecto.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MvcProyecto.Models.ReporteProblema", b =>
                {
                    b.HasOne("MvcProyecto.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MvcProyecto.Models.Reunion", b =>
                {
                    b.HasOne("MvcProyecto.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
